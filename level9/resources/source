level9@RainFall:~$ objdump -drwC -Mintel level9 

level9:     file format elf32-i386


Disassembly of section .init:

08048464 <_init>:
 8048464:       53                      push   ebx
 8048465:       83 ec 08                sub    esp,0x8
 8048468:       e8 00 00 00 00          call   804846d <_init+0x9>
 804846d:       5b                      pop    ebx
 804846e:       81 c3 d7 16 00 00       add    ebx,0x16d7
 8048474:       8b 83 fc ff ff ff       mov    eax,DWORD PTR [ebx-0x4]
 804847a:       85 c0                   test   eax,eax
 804847c:       74 05                   je     8048483 <_init+0x1f>
 804847e:       e8 3d 00 00 00          call   80484c0 <__gmon_start__@plt>
 8048483:       e8 48 01 00 00          call   80485d0 <frame_dummy>
 8048488:       e8 63 03 00 00          call   80487f0 <__do_global_ctors_aux>
 804848d:       83 c4 08                add    esp,0x8
 8048490:       5b                      pop    ebx
 8048491:       c3                      ret    

Disassembly of section .plt:

080484a0 <__cxa_atexit@plt-0x10>:
 80484a0:       ff 35 48 9b 04 08       push   DWORD PTR ds:0x8049b48
 80484a6:       ff 25 4c 9b 04 08       jmp    DWORD PTR ds:0x8049b4c
 80484ac:       00 00                   add    BYTE PTR [eax],al
        ...

080484b0 <__cxa_atexit@plt>:
 80484b0:       ff 25 50 9b 04 08       jmp    DWORD PTR ds:0x8049b50
 80484b6:       68 00 00 00 00          push   0x0
 80484bb:       e9 e0 ff ff ff          jmp    80484a0 <_init+0x3c>

080484c0 <__gmon_start__@plt>:
 80484c0:       ff 25 54 9b 04 08       jmp    DWORD PTR ds:0x8049b54
 80484c6:       68 08 00 00 00          push   0x8
 80484cb:       e9 d0 ff ff ff          jmp    80484a0 <_init+0x3c>

080484d0 <std::ios_base::Init::Init()@plt>:
 80484d0:       ff 25 58 9b 04 08       jmp    DWORD PTR ds:0x8049b58
 80484d6:       68 10 00 00 00          push   0x10
 80484db:       e9 c0 ff ff ff          jmp    80484a0 <_init+0x3c>

080484e0 <__libc_start_main@plt>:
 80484e0:       ff 25 5c 9b 04 08       jmp    DWORD PTR ds:0x8049b5c
 80484e6:       68 18 00 00 00          push   0x18
 80484eb:       e9 b0 ff ff ff          jmp    80484a0 <_init+0x3c>

080484f0 <_exit@plt>:
 80484f0:       ff 25 60 9b 04 08       jmp    DWORD PTR ds:0x8049b60
 80484f6:       68 20 00 00 00          push   0x20
 80484fb:       e9 a0 ff ff ff          jmp    80484a0 <_init+0x3c>

08048500 <std::ios_base::Init::~Init()@plt>:
 8048500:       ff 25 64 9b 04 08       jmp    DWORD PTR ds:0x8049b64
 8048506:       68 28 00 00 00          push   0x28
 804850b:       e9 90 ff ff ff          jmp    80484a0 <_init+0x3c>

08048510 <memcpy@plt>:
 8048510:       ff 25 68 9b 04 08       jmp    DWORD PTR ds:0x8049b68
 8048516:       68 30 00 00 00          push   0x30
 804851b:       e9 80 ff ff ff          jmp    80484a0 <_init+0x3c>

08048520 <strlen@plt>:
 8048520:       ff 25 6c 9b 04 08       jmp    DWORD PTR ds:0x8049b6c
 8048526:       68 38 00 00 00          push   0x38
 804852b:       e9 70 ff ff ff          jmp    80484a0 <_init+0x3c>

08048530 <operator new(unsigned int)@plt>:
 8048530:       ff 25 70 9b 04 08       jmp    DWORD PTR ds:0x8049b70
 8048536:       68 40 00 00 00          push   0x40
 804853b:       e9 60 ff ff ff          jmp    80484a0 <_init+0x3c>

Disassembly of section .text:

08048540 <_start>:
 8048540:       31 ed                   xor    ebp,ebp
 8048542:       5e                      pop    esi
 8048543:       89 e1                   mov    ecx,esp
 8048545:       83 e4 f0                and    esp,0xfffffff0
 8048548:       50                      push   eax
 8048549:       54                      push   esp
 804854a:       52                      push   edx
 804854b:       68 e0 87 04 08          push   0x80487e0
 8048550:       68 70 87 04 08          push   0x8048770
 8048555:       51                      push   ecx
 8048556:       56                      push   esi
 8048557:       68 f4 85 04 08          push   0x80485f4
 804855c:       e8 7f ff ff ff          call   80484e0 <__libc_start_main@plt>
 8048561:       f4                      hlt    
 8048562:       90                      nop
 8048563:       90                      nop
 8048564:       90                      nop
 8048565:       90                      nop
 8048566:       90                      nop
 8048567:       90                      nop
 8048568:       90                      nop
 8048569:       90                      nop
 804856a:       90                      nop
 804856b:       90                      nop
 804856c:       90                      nop
 804856d:       90                      nop
 804856e:       90                      nop
 804856f:       90                      nop

08048570 <__do_global_dtors_aux>:
 8048570:       55                      push   ebp
 8048571:       89 e5                   mov    ebp,esp
 8048573:       53                      push   ebx
 8048574:       83 ec 04                sub    esp,0x4
 8048577:       80 3d ac 9b 04 08 00    cmp    BYTE PTR ds:0x8049bac,0x0
 804857e:       75 3f                   jne    80485bf <__do_global_dtors_aux+0x4f>
 8048580:       a1 b0 9b 04 08          mov    eax,ds:0x8049bb0
 8048585:       bb 58 9a 04 08          mov    ebx,0x8049a58
 804858a:       81 eb 54 9a 04 08       sub    ebx,0x8049a54
 8048590:       c1 fb 02                sar    ebx,0x2
 8048593:       83 eb 01                sub    ebx,0x1
 8048596:       39 d8                   cmp    eax,ebx
 8048598:       73 1e                   jae    80485b8 <__do_global_dtors_aux+0x48>
 804859a:       8d b6 00 00 00 00       lea    esi,[esi+0x0]
 80485a0:       83 c0 01                add    eax,0x1
 80485a3:       a3 b0 9b 04 08          mov    ds:0x8049bb0,eax
 80485a8:       ff 14 85 54 9a 04 08    call   DWORD PTR [eax*4+0x8049a54]
 80485af:       a1 b0 9b 04 08          mov    eax,ds:0x8049bb0
 80485b4:       39 d8                   cmp    eax,ebx
 80485b6:       72 e8                   jb     80485a0 <__do_global_dtors_aux+0x30>
 80485b8:       c6 05 ac 9b 04 08 01    mov    BYTE PTR ds:0x8049bac,0x1
 80485bf:       83 c4 04                add    esp,0x4
 80485c2:       5b                      pop    ebx
 80485c3:       5d                      pop    ebp
 80485c4:       c3                      ret    
 80485c5:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 80485c9:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

080485d0 <frame_dummy>:
 80485d0:       55                      push   ebp
 80485d1:       89 e5                   mov    ebp,esp
 80485d3:       83 ec 18                sub    esp,0x18
 80485d6:       a1 5c 9a 04 08          mov    eax,ds:0x8049a5c
 80485db:       85 c0                   test   eax,eax
 80485dd:       74 12                   je     80485f1 <frame_dummy+0x21>
 80485df:       b8 00 00 00 00          mov    eax,0x0
 80485e4:       85 c0                   test   eax,eax
 80485e6:       74 09                   je     80485f1 <frame_dummy+0x21>
 80485e8:       c7 04 24 5c 9a 04 08    mov    DWORD PTR [esp],0x8049a5c
 80485ef:       ff d0                   call   eax
 80485f1:       c9                      leave  
 80485f2:       c3                      ret    
 80485f3:       90                      nop

080485f4 <main>:
 80485f4:       55                      push   ebp
 80485f5:       89 e5                   mov    ebp,esp
 80485f7:       53                      push   ebx
 80485f8:       83 e4 f0                and    esp,0xfffffff0
 80485fb:       83 ec 20                sub    esp,0x20
 80485fe:       83 7d 08 01             cmp    DWORD PTR [ebp+0x8],0x1
 8048602:       7f 0c                   jg     8048610 <main+0x1c>
 8048604:       c7 04 24 01 00 00 00    mov    DWORD PTR [esp],0x1
 804860b:       e8 e0 fe ff ff          call   80484f0 <_exit@plt>
 8048610:       c7 04 24 6c 00 00 00    mov    DWORD PTR [esp],0x6c
 8048617:       e8 14 ff ff ff          call   8048530 <operator new(unsigned int)@plt>
 804861c:       89 c3                   mov    ebx,eax
 804861e:       c7 44 24 04 05 00 00 00         mov    DWORD PTR [esp+0x4],0x5
 8048626:       89 1c 24                mov    DWORD PTR [esp],ebx
 8048629:       e8 c8 00 00 00          call   80486f6 <N::N(int)>
 804862e:       89 5c 24 1c             mov    DWORD PTR [esp+0x1c],ebx
 8048632:       c7 04 24 6c 00 00 00    mov    DWORD PTR [esp],0x6c
 8048639:       e8 f2 fe ff ff          call   8048530 <operator new(unsigned int)@plt>
 804863e:       89 c3                   mov    ebx,eax
 8048640:       c7 44 24 04 06 00 00 00         mov    DWORD PTR [esp+0x4],0x6
 8048648:       89 1c 24                mov    DWORD PTR [esp],ebx
 804864b:       e8 a6 00 00 00          call   80486f6 <N::N(int)>
 8048650:       89 5c 24 18             mov    DWORD PTR [esp+0x18],ebx
 8048654:       8b 44 24 1c             mov    eax,DWORD PTR [esp+0x1c]
 8048658:       89 44 24 14             mov    DWORD PTR [esp+0x14],eax
 804865c:       8b 44 24 18             mov    eax,DWORD PTR [esp+0x18]
 8048660:       89 44 24 10             mov    DWORD PTR [esp+0x10],eax
 8048664:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 8048667:       83 c0 04                add    eax,0x4
 804866a:       8b 00                   mov    eax,DWORD PTR [eax]
 804866c:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 8048670:       8b 44 24 14             mov    eax,DWORD PTR [esp+0x14]
 8048674:       89 04 24                mov    DWORD PTR [esp],eax
 8048677:       e8 92 00 00 00          call   804870e <N::setAnnotation(char*)>
 804867c:       8b 44 24 10             mov    eax,DWORD PTR [esp+0x10]
 8048680:       8b 00                   mov    eax,DWORD PTR [eax]
 8048682:       8b 10                   mov    edx,DWORD PTR [eax]
 8048684:       8b 44 24 14             mov    eax,DWORD PTR [esp+0x14]
 8048688:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 804868c:       8b 44 24 10             mov    eax,DWORD PTR [esp+0x10]
 8048690:       89 04 24                mov    DWORD PTR [esp],eax
 8048693:       ff d2                   call   edx
 8048695:       8b 5d fc                mov    ebx,DWORD PTR [ebp-0x4]
 8048698:       c9                      leave  
 8048699:       c3                      ret    

0804869a <__static_initialization_and_destruction_0(int, int)>:
 804869a:       55                      push   ebp
 804869b:       89 e5                   mov    ebp,esp
 804869d:       83 ec 18                sub    esp,0x18
 80486a0:       83 7d 08 01             cmp    DWORD PTR [ebp+0x8],0x1
 80486a4:       75 32                   jne    80486d8 <__static_initialization_and_destruction_0(int, int)+0x3e>
 80486a6:       81 7d 0c ff ff 00 00    cmp    DWORD PTR [ebp+0xc],0xffff
 80486ad:       75 29                   jne    80486d8 <__static_initialization_and_destruction_0(int, int)+0x3e>
 80486af:       c7 04 24 b4 9b 04 08    mov    DWORD PTR [esp],0x8049bb4
 80486b6:       e8 15 fe ff ff          call   80484d0 <std::ios_base::Init::Init()@plt>
 80486bb:       b8 00 85 04 08          mov    eax,0x8048500
 80486c0:       c7 44 24 08 78 9b 04 08         mov    DWORD PTR [esp+0x8],0x8049b78
 80486c8:       c7 44 24 04 b4 9b 04 08         mov    DWORD PTR [esp+0x4],0x8049bb4
 80486d0:       89 04 24                mov    DWORD PTR [esp],eax
 80486d3:       e8 d8 fd ff ff          call   80484b0 <__cxa_atexit@plt>
 80486d8:       c9                      leave  
 80486d9:       c3                      ret    

080486da <_GLOBAL__sub_I_main>:
 80486da:       55                      push   ebp
 80486db:       89 e5                   mov    ebp,esp
 80486dd:       83 ec 18                sub    esp,0x18
 80486e0:       c7 44 24 04 ff ff 00 00         mov    DWORD PTR [esp+0x4],0xffff
 80486e8:       c7 04 24 01 00 00 00    mov    DWORD PTR [esp],0x1
 80486ef:       e8 a6 ff ff ff          call   804869a <__static_initialization_and_destruction_0(int, int)>
 80486f4:       c9                      leave  
 80486f5:       c3                      ret    

080486f6 <N::N(int)>:
 80486f6:       55                      push   ebp
 80486f7:       89 e5                   mov    ebp,esp
 80486f9:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 80486fc:       c7 00 48 88 04 08       mov    DWORD PTR [eax],0x8048848
 8048702:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 8048705:       8b 55 0c                mov    edx,DWORD PTR [ebp+0xc]
 8048708:       89 50 68                mov    DWORD PTR [eax+0x68],edx
 804870b:       5d                      pop    ebp
 804870c:       c3                      ret    
 804870d:       90                      nop

0804870e <N::setAnnotation(char*)>:
 804870e:       55                      push   ebp
 804870f:       89 e5                   mov    ebp,esp
 8048711:       83 ec 18                sub    esp,0x18
 8048714:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 8048717:       89 04 24                mov    DWORD PTR [esp],eax
 804871a:       e8 01 fe ff ff          call   8048520 <strlen@plt>
 804871f:       8b 55 08                mov    edx,DWORD PTR [ebp+0x8]
 8048722:       83 c2 04                add    edx,0x4
 8048725:       89 44 24 08             mov    DWORD PTR [esp+0x8],eax
 8048729:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 804872c:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 8048730:       89 14 24                mov    DWORD PTR [esp],edx
 8048733:       e8 d8 fd ff ff          call   8048510 <memcpy@plt>
 8048738:       c9                      leave  
 8048739:       c3                      ret    

0804873a <N::operator+(N&)>:
 804873a:       55                      push   ebp
 804873b:       89 e5                   mov    ebp,esp
 804873d:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 8048740:       8b 50 68                mov    edx,DWORD PTR [eax+0x68]
 8048743:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 8048746:       8b 40 68                mov    eax,DWORD PTR [eax+0x68]
 8048749:       01 d0                   add    eax,edx
 804874b:       5d                      pop    ebp
 804874c:       c3                      ret    
 804874d:       90                      nop

0804874e <N::operator-(N&)>:
 804874e:       55                      push   ebp
 804874f:       89 e5                   mov    ebp,esp
 8048751:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 8048754:       8b 50 68                mov    edx,DWORD PTR [eax+0x68]
 8048757:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 804875a:       8b 40 68                mov    eax,DWORD PTR [eax+0x68]
 804875d:       89 d1                   mov    ecx,edx
 804875f:       29 c1                   sub    ecx,eax
 8048761:       89 c8                   mov    eax,ecx
 8048763:       5d                      pop    ebp
 8048764:       c3                      ret    
 8048765:       90                      nop
 8048766:       90                      nop
 8048767:       90                      nop
 8048768:       90                      nop
 8048769:       90                      nop
 804876a:       90                      nop
 804876b:       90                      nop
 804876c:       90                      nop
 804876d:       90                      nop
 804876e:       90                      nop
 804876f:       90                      nop

08048770 <__libc_csu_init>:
 8048770:       55                      push   ebp
 8048771:       57                      push   edi
 8048772:       56                      push   esi
 8048773:       53                      push   ebx
 8048774:       e8 69 00 00 00          call   80487e2 <__i686.get_pc_thunk.bx>
 8048779:       81 c3 cb 13 00 00       add    ebx,0x13cb
 804877f:       83 ec 1c                sub    esp,0x1c
 8048782:       8b 6c 24 30             mov    ebp,DWORD PTR [esp+0x30]
 8048786:       8d bb 08 ff ff ff       lea    edi,[ebx-0xf8]
 804878c:       e8 d3 fc ff ff          call   8048464 <_init>
 8048791:       8d 83 04 ff ff ff       lea    eax,[ebx-0xfc]
 8048797:       29 c7                   sub    edi,eax
 8048799:       c1 ff 02                sar    edi,0x2
 804879c:       85 ff                   test   edi,edi
 804879e:       74 29                   je     80487c9 <__libc_csu_init+0x59>
 80487a0:       31 f6                   xor    esi,esi
 80487a2:       8d b6 00 00 00 00       lea    esi,[esi+0x0]
 80487a8:       8b 44 24 38             mov    eax,DWORD PTR [esp+0x38]
 80487ac:       89 2c 24                mov    DWORD PTR [esp],ebp
 80487af:       89 44 24 08             mov    DWORD PTR [esp+0x8],eax
 80487b3:       8b 44 24 34             mov    eax,DWORD PTR [esp+0x34]
 80487b7:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 80487bb:       ff 94 b3 04 ff ff ff    call   DWORD PTR [ebx+esi*4-0xfc]
 80487c2:       83 c6 01                add    esi,0x1
 80487c5:       39 fe                   cmp    esi,edi
 80487c7:       75 df                   jne    80487a8 <__libc_csu_init+0x38>
 80487c9:       83 c4 1c                add    esp,0x1c
 80487cc:       5b                      pop    ebx
 80487cd:       5e                      pop    esi
 80487ce:       5f                      pop    edi
 80487cf:       5d                      pop    ebp
 80487d0:       c3                      ret    
 80487d1:       eb 0d                   jmp    80487e0 <__libc_csu_fini>
 80487d3:       90                      nop
 80487d4:       90                      nop
 80487d5:       90                      nop
 80487d6:       90                      nop
 80487d7:       90                      nop
 80487d8:       90                      nop
 80487d9:       90                      nop
 80487da:       90                      nop
 80487db:       90                      nop
 80487dc:       90                      nop
 80487dd:       90                      nop
 80487de:       90                      nop
 80487df:       90                      nop

080487e0 <__libc_csu_fini>:
 80487e0:       f3 c3                   repz ret 

080487e2 <__i686.get_pc_thunk.bx>:
 80487e2:       8b 1c 24                mov    ebx,DWORD PTR [esp]
 80487e5:       c3                      ret    
 80487e6:       90                      nop
 80487e7:       90                      nop
 80487e8:       90                      nop
 80487e9:       90                      nop
 80487ea:       90                      nop
 80487eb:       90                      nop
 80487ec:       90                      nop
 80487ed:       90                      nop
 80487ee:       90                      nop
 80487ef:       90                      nop

080487f0 <__do_global_ctors_aux>:
 80487f0:       55                      push   ebp
 80487f1:       89 e5                   mov    ebp,esp
 80487f3:       53                      push   ebx
 80487f4:       83 ec 04                sub    esp,0x4
 80487f7:       a1 4c 9a 04 08          mov    eax,ds:0x8049a4c
 80487fc:       83 f8 ff                cmp    eax,0xffffffff
 80487ff:       74 13                   je     8048814 <__do_global_ctors_aux+0x24>
 8048801:       bb 4c 9a 04 08          mov    ebx,0x8049a4c
 8048806:       66 90                   xchg   ax,ax
 8048808:       83 eb 04                sub    ebx,0x4
 804880b:       ff d0                   call   eax
 804880d:       8b 03                   mov    eax,DWORD PTR [ebx]
 804880f:       83 f8 ff                cmp    eax,0xffffffff
 8048812:       75 f4                   jne    8048808 <__do_global_ctors_aux+0x18>
 8048814:       83 c4 04                add    esp,0x4
 8048817:       5b                      pop    ebx
 8048818:       5d                      pop    ebp
 8048819:       c3                      ret    
 804881a:       90                      nop
 804881b:       90                      nop

Disassembly of section .fini:

0804881c <_fini>:
 804881c:       53                      push   ebx
 804881d:       83 ec 08                sub    esp,0x8
 8048820:       e8 00 00 00 00          call   8048825 <_fini+0x9>
 8048825:       5b                      pop    ebx
 8048826:       81 c3 1f 13 00 00       add    ebx,0x131f
 804882c:       e8 3f fd ff ff          call   8048570 <__do_global_dtors_aux>
 8048831:       83 c4 08                add    esp,0x8
 8048834:       5b                      pop    ebx
 8048835:       c3                      ret  